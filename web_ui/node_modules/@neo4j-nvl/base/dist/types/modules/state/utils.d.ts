import type { NvlOptions } from './types';
export declare const processColorStyles: (styling: NvlOptions['styling'], { legacyNodeDefaultBorderColor, legacySelectedBorderColor, legacyDisabledItemColor, legacyDisabledItemFontColor }: {
    legacyNodeDefaultBorderColor?: string;
    legacySelectedBorderColor?: string;
    legacyDisabledItemColor?: string;
    legacyDisabledItemFontColor?: string;
}) => {
    nodeBorderStyles: {
        default: {
            rings?: {
                width?: number;
                widthFactor?: number;
                color: string;
            }[];
            shadow?: import("./types").ShadowStyle;
        };
        selected: {
            rings?: {
                width?: number;
                widthFactor?: number;
                color: string;
            }[];
            shadow?: import("./types").ShadowStyle;
        };
    };
    relationshipBorderStyles: {
        default: import("./types").BorderStyle;
        selected: {
            rings?: {
                width?: number;
                widthFactor?: number;
                color: string;
            }[];
            shadow?: import("./types").ShadowStyle;
        };
    };
    disabledItemStyles: {
        color: string;
        fontColor: string;
    };
    defaultNodeColor: string;
    defaultRelationshipColor: string;
    minimapViewportBoxColor: string;
};
