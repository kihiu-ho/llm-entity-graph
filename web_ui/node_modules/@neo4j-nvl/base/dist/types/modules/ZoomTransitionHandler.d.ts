import PIDController from 'node-pid-controller';
import type { Node } from '../types/graph-element';
import type { NvlState } from './state/types';
export default class ZoomTransitionHandler {
    xCtrl: PIDController;
    yCtrl: PIDController;
    zoomCtrl: PIDController;
    private getNodePositions;
    private firstUpdate;
    private readonly state;
    private readonly canvas;
    private readonly stateDisposers;
    constructor({ state, getNodePositions, canvas }: {
        state: NvlState;
        getNodePositions: (data: Node[]) => Node[];
        canvas: HTMLCanvasElement;
    });
    needsToRun(): boolean;
    update(layoutActive: boolean, onTransitionCompleted?: () => void): void;
    destroy(): void;
    private recalculateTarget;
    private allNodesAreVisible;
    private reset;
    private fitNodes;
}
