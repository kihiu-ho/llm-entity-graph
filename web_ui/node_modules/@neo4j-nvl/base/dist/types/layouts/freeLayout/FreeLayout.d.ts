import type { NvlState } from '../../modules/state/types';
import type { Node } from '../../types/graph-element';
import type { Point } from '../../utils/geometry';
export declare class FreeLayout {
    private state;
    private positions;
    private shouldUpdate;
    private stateDisposers;
    constructor(config: {
        state: NvlState;
    });
    setOptions(): any;
    updateNodes(positionList: (Point & {
        id: string;
    })[]): void;
    update(refreshPositions?: boolean): void;
    layout(nodes: Node[], nodeIds: Record<string, Node>, idToPosition: Record<string, Node>): void;
    setNodePositions(p: Record<string, Point>): void;
    getNodePositions(nodeList: Node[]): (Point & {
        id: string;
    })[];
    getShouldUpdate(): boolean;
    getComputing(): boolean;
    terminateUpdate(): any;
    destroy(): void;
}
