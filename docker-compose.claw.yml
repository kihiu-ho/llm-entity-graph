version: '3.8'

services:
  # Web UI Service for Claw Cloud with Neo4j NVL library
  web-ui:
    build:
      context: .
      dockerfile: Dockerfile.claw
    ports:
      - "5000:5000"
    environment:
      # Application Configuration
      - FLASK_ENV=production
      - PYTHONUNBUFFERED=1
      - WEB_UI_HOST=0.0.0.0
      - WEB_UI_PORT=5000
      
      # API Configuration (if connecting to separate API)
      - API_BASE_URL=${API_BASE_URL:-http://localhost:8058}
      
      # Database Configuration (UPDATE THESE!)
      - DATABASE_URL=${DATABASE_URL:-postgresql://user:password@host:port/database}
      - NEO4J_URI=${NEO4J_URI:-neo4j+s://instance.databases.neo4j.io}
      - NEO4J_USERNAME=${NEO4J_USERNAME:-neo4j}
      - NEO4J_PASSWORD=${NEO4J_PASSWORD:-your-neo4j-password}
      
      # LLM Configuration (UPDATE THESE!)
      - LLM_PROVIDER=${LLM_PROVIDER:-openai}
      - LLM_API_KEY=${LLM_API_KEY:-your-openai-api-key}
      - EMBEDDING_API_KEY=${EMBEDDING_API_KEY:-your-openai-api-key}
      - LLM_CHOICE=${LLM_CHOICE:-gpt-4o-mini}
      - EMBEDDING_MODEL=${EMBEDDING_MODEL:-text-embedding-3-small}
    volumes:
      # Optional: Mount local documents for ingestion
      - ./documents:/app/documents:ro
      # Optional: Mount logs directory
      - ./logs:/app/logs
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s
    restart: unless-stopped

  # Combined API + Web UI Service for Claw Cloud
  combined:
    build:
      context: .
      dockerfile: Dockerfile.combined
    ports:
      - "5000:5000"  # Web UI
      - "8058:8058"  # API
    environment:
      # Application Configuration
      - APP_ENV=production
      - PRODUCTION_MODE=true
      - LOG_LEVEL=INFO
      - FLASK_ENV=production
      - PYTHONUNBUFFERED=1
      
      # Port Configuration
      - APP_PORT=8058
      - WEB_UI_PORT=5000
      - APP_HOST=0.0.0.0
      
      # Database Configuration (UPDATE THESE!)
      - DATABASE_URL=${DATABASE_URL:-postgresql://user:password@host:port/database}
      - NEO4J_URI=${NEO4J_URI:-neo4j+s://instance.databases.neo4j.io}
      - NEO4J_USERNAME=${NEO4J_USERNAME:-neo4j}
      - NEO4J_PASSWORD=${NEO4J_PASSWORD:-your-neo4j-password}
      
      # LLM Configuration (UPDATE THESE!)
      - LLM_PROVIDER=${LLM_PROVIDER:-openai}
      - LLM_API_KEY=${LLM_API_KEY:-your-openai-api-key}
      - EMBEDDING_API_KEY=${EMBEDDING_API_KEY:-your-openai-api-key}
      - LLM_CHOICE=${LLM_CHOICE:-gpt-4o-mini}
      - EMBEDDING_MODEL=${EMBEDDING_MODEL:-text-embedding-3-small}
    volumes:
      # Optional: Mount local documents for ingestion
      - ./documents:/app/documents:ro
      # Optional: Mount logs directory
      - ./logs:/app/logs
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s
    restart: unless-stopped
    profiles:
      - combined  # Only start with: docker-compose --profile combined up

networks:
  default:
    driver: bridge

volumes:
  # Persistent volumes for data
  documents-data:
    driver: local
  logs-data:
    driver: local
